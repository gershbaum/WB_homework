-- Задание 1. 

/*
 * Исходя из условий задачи нам необходимо разделить селлеров на категории: "успешные" ('rich') и "неуспешные" (или "остальные", 'poor').
 * Для каждого продавца покажем количество категорий (под этим понятием будем подразумевать количество уникальных категорий), средний рейтинг категорий
 * продавца, суммарную выручку и принадлежность селлера к одной из двух вышеупомянутых групп.
 */

/*
 * Поскольку условие 2-го заданий вытекаетт из 1-го, имеет смысл создать временную таблицу, в которой можно привести агрегации, необходимые
 * для последующих запросов. И далее работать уже с ней.
 */

-- С ее создания мы и начнем:
drop table if exists temp_seller_class;

create temp table temp_seller_class as
	   select seller_id,
	   		  count(distinct category) as total_categ,   -- подсчитываем количество уникальных категорий у каждого селлера
	   		  round(avg(rating), 1) as avg_rating,   -- средний рейтинг категорий селлера, для лаконичности результата округлим до десятой
	   		  sum(revenue) as total_revenue,   -- сумма выручки каждого селлера
	   		  
	   		  /*
	   		   * Категории две, условие "продает более 1 категории" учитываем в having, поэтому в 'case' учитываем только суммарую выручку.
	   		   * В условии названы строгие границы для суммарной выручки: "превышает 50 000" для 'rich' и "менее 50 000" для 'poor'.
	   		   * Однако, как кажется, значение 50 000 нельзя не включать ни в одну из предложенных категорий продавцов, поэтому
	   		   * условие "успешности" будет логично сделать более строгим, а суммарная выручка 50 000 будет означать, что селлер все еще неуспешен.
	   		   */
	   		  case when sum(revenue) > 50000 then 'rich'   -- успешные продавцы
	   			   when sum(revenue) <= 50000 then 'poor'   -- неуспешные продавцы
	   		  end as seller_type,
	   		  min(date_reg) as first_date_reg,   -- дату регистрации определяем как наименьшую из всех дат у селлера
	   		  min(delivery_days) as min_delivery_days,   -- мин. срок доставки у селлера (для второго запроса)
	   		  max(delivery_days) as max_delivery_days   -- макс. срок доставки у селлера (для второго запроса)
	   from sort_group_2.sellers 
	   where category != 'Bedding'   -- категорию 'Bedding' не учитываем!
	   group by seller_id 
       having count(category) > 1;   -- продает больше 1-й категории товаров

--select * from temp_seller_class;   -- для самопроверки

-- Запрос для первого задания:
select seller_id,
	   total_categ,
	   avg_rating,
	   total_revenue,
	   seller_type
from temp_seller_class 
order by seller_id;   -- вывод по возрастанию id селлера

-- Задание 2. 

/*
 * Для "неуспешых" продавцов посчитаем, сколько полных месяцев прошло с даты регистрации по день выполнения задания.
 * В данном случае подойдут функции 'trunc' и 'floor', поскольку нам нужно округление до ближайшего меньшего целого.
 * Также определим разницу между мин. и макс. сроками доставки у "неуспешных" продавцов. Для этого во временной таблице 'temp_seller_class'
 * мы сформировали столбцы со соответствующими сроками для 'rich' и 'poor'-селлеров. Да, вычисление этих значений для 'rich'-селлеров
 * может быть излишне для выполения данного задания, но с точки зрения лаконичности и читабельности кода - "очень даже".
 */

-- Запрос для второго задания:
select seller_id,
	   floor((date '2024-11-18' - first_date_reg) / 30) as month_from_registration,   -- в данном случае подойдет как 'trunc', так и 'floor'
	   (select max(max_delivery_days) - min(min_delivery_days)
		from temp_seller_class 
		where seller_type = 'poor'
	   ) as max_delivery_difference   -- используем подзапрос для вычисления разницы среди всех 'poor'-селлеров
from temp_seller_class 
where seller_type = 'poor'
order by seller_id;

-- Задание 3.

/*
 * Необходимо отобрать продавцов, зарегистрированных в 2022 году и продающих ровно 2 категории товаров с суммарной выручкой более 75 000.
 * У многих селлеров есть несколько дат регистрации. Ранее мы под ней понимали миимальную из всех дат регистрации определеного селлера.
 * Задание можно воспринять по-разному - за дату регистрации можно считать по-прежнему минимальую из всех дат для селлера. А можно, например,
 * смягчить условие и отбирать селлеров, у которых ровно 2 категории товаров (будем учитывать уникальные категории) зарегистрированы в 2022 году, 
 * сумма выручки с продажи которых превышает 75 000.
 */
--select * from sort_group_2.sellers order by seller_id 

-- За дату регистрации принимаем минмимальную, категории должны быть уникальны
select seller_id,
	   string_agg(distinct category, ' - ' order by category) as category_pair   -- используем агрегатную ф-цию 'string_agg()', добавляем разделитель, сортируем
from sort_group_2.sellers
group by seller_id
having extract(year from min(date_reg)) = 2022   -- условие, что мин. дата катируется 2022-м годом
	   and count(distinct category) = 2  
	   and sum(revenue) > 75000;

/*
 * Таких селлеров нет. Посмотрим, есть ли селлеры, у которых есть дата регистрации за 2022 год, для этих дат регистрации есть ровно 2 уникальные
 * категории товаров, с которых суммарная выручка составляет более 75 000.
 */ 

select seller_id,
	   string_agg(distinct category, ' - ' order by category) as category_pair 
from sort_group_2.sellers
where extract(year from date_reg) = 2022
group by seller_id
having count(distinct category) = 2
       and sum(revenue) > 75000;

-- Таких селлеров два: 93-й и 132-й.




